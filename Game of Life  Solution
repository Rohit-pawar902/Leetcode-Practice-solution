class Solution {
       public int dx[]={1,-1,0,0,1,1,-1,-1};
       public int dy[]={0,0,1,-1,-1,1,-1,1};
    
    public void gameOfLife(int[][] board) {
        int board1[][]=new int[board.length][board[0].length];
        for(int i=0;i<board.length;i++)
        {
            for(int j=0;j<board[0].length;j++){
                if(board[i][j]==1){
                    int sum=0;
                    for(int k=0;k<dx.length;k++){
                        if(valid(i+dx[k],j+dy[k],board)){
                            sum+=board[i+dx[k]][j+dy[k]];
                        }
                    }
                    if(sum<2){
                        board1[i][j]=-1;
                    }
                    else if(sum==2||sum==3){
                        board1[i][j]=0;
                    }
                    else if(sum>3){  //overpopulation
                        board1[i][j]=-1;
                    }
                    
                }
                else{
                    int sum=0;
                    for(int k=0;k<dx.length;k++){
                        if(valid(i+dx[k],j+dy[k],board)){
                            sum+=board[i+dx[k]][j+dy[k]];
                        }
                    }
                    if(sum==3){
                        board1[i][j]=1;
                    }
                }
                
            }
        }
        
          for(int i=0;i<board.length;i++){
              for(int j=0;j<board[0].length;j++){
                  board[i][j]+=board1[i][j];
              }
          }
    }
    
    public boolean valid(int x,int y,int [][]board){
        if(x<board.length&&y<board[0].length&&x>=0&&y>=0){
            return true;
        }
        return false;
    }
    
    public void gameOfLife(int[][] board) {  //ANOTHER SOLUTION BUT O(1)SPACE AND LESS CODE THAN PREVIOUS
        int board1[][]=new int[board.length][board[0].length];
        for(int i=0;i<board.length;i++){
            for(int j=0;j<board[0].length;j++){
                 int sum=0;
                    for(int k=0;k<dx.length;k++){
                        if(valid(i+dx[k],j+dy[k],board)){
                             if(board[i+dx[k]][j+dy[k]]==1||board[i+dx[k]][j+dy[k]]==2)++sum; //1 and 2 for (1)
                        }
                    }
                    if(board[i][j]==1&&(sum<2||sum>3)){//dead
                        board[i][j]=2;
                    }
                    else if(board[i][j]==0&&sum==3){
                        board[i][j]=3;  
                    }
                    
                }
                
            }//for loop end
        
          for(int i=0;i<board.length;i++){
              for(int j=0;j<board[0].length;j++){
                  board[i][j]=board[i][j]%2;
              }
          }
    }
}
